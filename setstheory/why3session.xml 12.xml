<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.7" alternative="strings" timelimit="1800" steplimit="0" memlimit="1000"/>
<prover id="1" name="Z3" version="4.8.6" alternative="noBV" timelimit="1800" steplimit="0" memlimit="1000"/>
<prover id="2" name="Eprover" version="2.5" timelimit="1800" steplimit="0" memlimit="1000"/>
<prover id="3" name="Alt-Ergo" version="2.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Spass" version="3.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="6" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="setstheory.mlw"/>
<theory name="BoolSet" proved="true">
 <goal name="eval_positive&#39;vc" expl="VC for eval_positive" proved="true">
 <proof prover="6"><result status="valid" time="0.31" steps="19327"/></proof>
 </goal>
 <goal name="eval_negative&#39;vc" expl="VC for eval_negative" proved="true">
 <proof prover="6"><result status="valid" time="0.31" steps="19542"/></proof>
 </goal>
 <goal name="neg_positive_isnegative&#39;vc" expl="VC for neg_positive_isnegative" proved="true">
 <proof prover="6"><result status="valid" time="0.33" steps="22375"/></proof>
 </goal>
 <goal name="eval_negative_add1" proved="true">
 <proof prover="6"><result status="valid" time="0.62" steps="34309"/></proof>
 </goal>
 <goal name="eval_negative_add&#39;vc" expl="VC for eval_negative_add" proved="true">
 <proof prover="6"><result status="valid" time="0.23" steps="16929"/></proof>
 </goal>
 <goal name="eval_positive_add&#39;vc" expl="VC for eval_positive_add" proved="true">
 <proof prover="6"><result status="valid" time="0.29" steps="18312"/></proof>
 </goal>
 <goal name="eval_positive_abso" proved="true">
 <proof prover="6"><result status="valid" time="0.28" steps="17946"/></proof>
 </goal>
 <goal name="eval_negative_abso" proved="true">
 <proof prover="6"><result status="valid" time="0.28" steps="17972"/></proof>
 </goal>
 <goal name="eval_positive_neutral" proved="true">
 <proof prover="6"><result status="valid" time="0.27" steps="18294"/></proof>
 </goal>
 <goal name="eval_negative_neutral" proved="true">
 <proof prover="6"><result status="valid" time="0.28" steps="18284"/></proof>
 </goal>
</theory>
<theory name="PropositionalFormulaSet">
 <goal name="cast_commutes_add&#39;vc" expl="VC for cast_commutes_add" proved="true">
 <proof prover="3"><result status="highfailure" time="0.01"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="445019"/></proof>
 <proof prover="6"><result status="timeout" time="1.00" steps="54093"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="cast_commutes_add&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="6"><result status="valid" time="0.57" steps="37635"/></proof>
  </goal>
  <goal name="cast_commutes_add&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="3"><result status="highfailure" time="0.01"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <proof prover="5"><result status="timeout" time="1.00" steps="1115510"/></proof>
  <proof prover="6" timelimit="5" memlimit="2000"><result status="valid" time="0.92" steps="67046"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eval_negative_add&#39;vc" expl="VC for eval_negative_add">
 <proof prover="0" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="1" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="2" obsolete="true"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="highfailure" time="0.01"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="841178"/></proof>
 <proof prover="6"><result status="timeout" time="1.00" steps="76490"/></proof>
 <transf name="split_vc" >
  <goal name="eval_negative_add&#39;vc.0" expl="postcondition">
  <proof prover="3" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="867796"/></proof>
  <proof prover="6" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="583859"/></proof>
  <transf name="inline_goal" >
   <goal name="eval_negative_add&#39;vc.0.0" expl="postcondition">
   <transf name="split_all_full" >
    <goal name="eval_negative_add&#39;vc.0.0.0" expl="postcondition">
    <proof prover="3" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
    <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
    <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="898689"/></proof>
    <proof prover="6" timelimit="30" memlimit="4000"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="neg_positive_isNegative&#39;vc" expl="VC for neg_positive_isNegative" proved="true">
 <proof prover="6"><result status="valid" time="0.51" steps="39799"/></proof>
 </goal>
 <goal name="eval_positive_add&#39;vc" expl="VC for eval_positive_add" proved="true">
 <proof prover="6"><result status="valid" time="0.57" steps="35678"/></proof>
 </goal>
 <goal name="eval_positive_abso" proved="true">
 <proof prover="6"><result status="valid" time="0.61" steps="38123"/></proof>
 </goal>
 <goal name="eval_negative_abso" proved="true">
 <proof prover="6"><result status="valid" time="0.55" steps="35321"/></proof>
 </goal>
 <goal name="eval_positive_neutral" proved="true">
 <proof prover="6"><result status="valid" time="0.49" steps="35480"/></proof>
 </goal>
 <goal name="eval_negative_neutral" proved="true">
 <proof prover="6"><result status="valid" time="0.38" steps="36210"/></proof>
 </goal>
 <goal name="eval_singleton_equalEvalpliteral" proved="true">
 <proof prover="6"><result status="valid" time="0.70" steps="46569"/></proof>
 </goal>
</theory>
</file>
</why3session>
