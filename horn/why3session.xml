<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="Alt-Ergo" version="2.4.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Spass" version="3.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="5" name="CVC4" version="1.7" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="horn.mlw"/>
<theory name="Converts">
 <goal name="convertRStoAF&#39;vc" expl="VC for convertRStoAF">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="0.72"/></proof>
 <proof prover="4"><result status="highfailure" time="0.76" steps="989485"/></proof>
 <proof prover="5"><result status="timeout" time="0.77" steps="46350"/></proof>
 <transf name="split_vc" >
  <goal name="convertRStoAF&#39;vc.0" expl="postcondition">
  <proof prover="1" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="0.78"/></proof>
  <proof prover="4" obsolete="true"><result status="highfailure" time="0.79" steps="992295"/></proof>
  <proof prover="5" obsolete="true"><result status="timeout" time="1.00" steps="48728"/></proof>
  <transf name="split_vc" >
   <goal name="convertRStoAF&#39;vc.0.0" expl="postcondition">
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="2.73"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="2.80" steps="2109974"/></proof>
   <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="226186"/></proof>
   <transf name="compute_hyp" >
    <goal name="convertRStoAF&#39;vc.0.0.0" expl="postcondition">
    <proof prover="1" obsolete="true"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="1147064"/></proof>
    <proof prover="5" obsolete="true"><result status="timeout" time="1.00" steps="68203"/></proof>
    <transf name="split_vc" >
     <goal name="convertRStoAF&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><undone/></proof>
     <proof prover="4" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="26.77" steps="12400508"/></proof>
     <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="4427784"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   <transf name="inline_goal" >
    <goal name="convertRStoAF&#39;vc.0.0.0" expl="postcondition">
    <transf name="split_all_full" >
     <goal name="convertRStoAF&#39;vc.0.0.0.0" expl="postcondition">
     <proof prover="1" obsolete="true"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="0.70"/></proof>
     <proof prover="4" obsolete="true"><result status="highfailure" time="0.41" steps="427608"/></proof>
     <proof prover="5" obsolete="true"><result status="timeout" time="0.56" steps="39044"/></proof>
     <transf name="split_vc" >
      <goal name="convertRStoAF&#39;vc.0.0.0.0.0" expl="postcondition">
      <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
      <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="22.62"/></proof>
      <proof prover="4" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="19.66" steps="4962125"/></proof>
      <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="3566359"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertRStoAF&#39;vc.0.1" expl="postcondition">
   <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="2.05"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="2.36" steps="1193471"/></proof>
   <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="4.15" steps="187737"/></proof>
   <transf name="compute_hyp" >
    <goal name="convertRStoAF&#39;vc.0.1.0" expl="postcondition">
    <proof prover="1" obsolete="true"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="1185813"/></proof>
    <proof prover="5" obsolete="true"><result status="timeout" time="1.00" steps="62384"/></proof>
    <transf name="split_vc" >
     <goal name="convertRStoAF&#39;vc.0.1.0.0" expl="postcondition">
     <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00"/></proof>
     <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="1451865"/></proof>
     <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><undone/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   <transf name="inline_goal" >
    <goal name="convertRStoAF&#39;vc.0.1.0" expl="postcondition">
    <transf name="split_all_full" >
     <goal name="convertRStoAF&#39;vc.0.1.0.0" expl="postcondition">
     <proof prover="1" obsolete="true"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3" obsolete="true"><result status="timeout" time="0.66"/></proof>
     <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="981020"/></proof>
     <proof prover="5" obsolete="true"><result status="timeout" time="1.00" steps="57954"/></proof>
     <transf name="split_vc" >
      <goal name="convertRStoAF&#39;vc.0.1.0.0.0" expl="postcondition">
      <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
      <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="23.46"/></proof>
      <proof prover="4" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="19.48" steps="11998923"/></proof>
      <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="3430425"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
   <goal name="convertRStoAF&#39;vc.0.2" expl="postcondition">
   <proof prover="5" obsolete="true"><result status="valid" time="0.65" steps="37498"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="convertRStoAF&#39;vc.1" expl="postcondition">
  <proof prover="5" obsolete="true"><result status="valid" time="0.49" steps="36307"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="convertPLtoAF&#39;vc" expl="VC for convertPLtoAF" proved="true">
 <proof prover="5"><result status="valid" time="0.64" steps="39022"/></proof>
 </goal>
 <goal name="convertAFtoPL&#39;vc" expl="VC for convertAFtoPL" proved="true">
 <proof prover="5"><result status="valid" time="0.65" steps="39302"/></proof>
 </goal>
 <goal name="convertAFtoRS&#39;vc" expl="VC for convertAFtoRS" proved="true">
 <proof prover="5"><result status="valid" time="0.66" steps="39868"/></proof>
 </goal>
 <goal name="convertPLtoAF_evaluation" proved="true">
 <proof prover="5"><result status="valid" time="0.57" steps="37986"/></proof>
 </goal>
 <goal name="convertAFtoPL_evaluation" proved="true">
 <proof prover="5"><result status="valid" time="0.57" steps="38100"/></proof>
 </goal>
 <goal name="PLtoAF_AFtoPL">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="0.62"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="998035"/></proof>
 <proof prover="5"><result status="timeout" time="0.77" steps="46755"/></proof>
 <transf name="split_vc" >
  <goal name="PLtoAF_AFtoPL.0">
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="3.94"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="3.69" steps="1070978"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="unknown" time="1.65" steps="85466"/></proof>
  <transf name="inline_goal" >
   <goal name="PLtoAF_AFtoPL.0.0">
   <transf name="split_all_full" >
    <goal name="PLtoAF_AFtoPL.0.0.0">
    <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="valid" time="18.92"/></proof>
    <proof prover="4" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="21.68" steps="1269060"/></proof>
    <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><result status="unknown" time="1.69" steps="90439"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="RStoAF_AFtoRS">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="0.62"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="869927"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="50599"/></proof>
 <transf name="split_vc" >
  <goal name="RStoAF_AFtoRS.0">
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="3.77"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="3.72" steps="970781"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="unknown" time="1.73" steps="85445"/></proof>
  <transf name="inline_goal" >
   <goal name="RStoAF_AFtoRS.0.0">
   <transf name="split_all_full" >
    <goal name="RStoAF_AFtoRS.0.0.0">
    <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="valid" time="18.58"/></proof>
    <proof prover="4" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="21.94" steps="1637818"/></proof>
    <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><result status="unknown" time="2.02" steps="90654"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="AFtoRS_RStoAF">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="0.70"/></proof>
 <proof prover="4"><result status="highfailure" time="0.78" steps="865756"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="51316"/></proof>
 <transf name="compute_hyp" >
  <goal name="AFtoRS_RStoAF.0">
  <proof prover="5" obsolete="true"><result status="valid" time="0.41" steps="40854"/></proof>
  </goal>
 </transf>
 <transf name="split_vc" >
  <goal name="AFtoRS_RStoAF.0">
  <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="2.96"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="2.19" steps="859495"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="unknown" time="1.80" steps="85595"/></proof>
  <transf name="inline_goal" >
   <goal name="AFtoRS_RStoAF.0.0">
   <transf name="split_all_full" >
    <goal name="AFtoRS_RStoAF.0.0.0">
    <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="23.09"/></proof>
    <proof prover="4" timelimit="30" memlimit="4000" obsolete="true"><result status="highfailure" time="22.08" steps="1254601"/></proof>
    <proof prover="5" timelimit="30" memlimit="4000" obsolete="true"><result status="unknown" time="2.00" steps="90614"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="Eval">
 <goal name="eval_setconjunction_singleton" proved="true">
 <proof prover="4"><result status="valid" time="0.17" steps="286928"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="79639"/></proof>
 </goal>
 <goal name="eval_commutes_add&#39;vc" expl="VC for eval_commutes_add" proved="true">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="2228806"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="72459"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="eval_commutes_add&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.50" steps="47259"/></proof>
  </goal>
  <goal name="eval_commutes_add&#39;vc.1" expl="postcondition" proved="true">
  <proof prover="1" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4" obsolete="true"><result status="timeout" time="1.00" steps="516673"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="valid" time="1.00" steps="73671"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="add_eval" proved="true">
 <proof prover="5"><result status="valid" time="0.38" steps="42930"/></proof>
 </goal>
 <goal name="eval_clauselist_top_is_conj_eval_clause_top">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="1026731"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="74999"/></proof>
 <transf name="split_vc" >
  <goal name="eval_clauselist_top_is_conj_eval_clause_top.0">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="4697296"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="415058"/></proof>
  <transf name="inline_goal" >
   <goal name="eval_clauselist_top_is_conj_eval_clause_top.0.0">
   <transf name="split_all_full" >
    <goal name="eval_clauselist_top_is_conj_eval_clause_top.0.0.0">
    <proof prover="1"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <proof prover="4"><result status="timeout" time="1.00" steps="553576"/></proof>
    <proof prover="5"><result status="timeout" time="1.00" steps="63287"/></proof>
    <transf name="split_vc" >
     <goal name="eval_clauselist_top_is_conj_eval_clause_top.0.0.0.0">
     <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
     <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="2667909"/></proof>
     <proof prover="5" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="3615062"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="eval_clauselist_top_is_conj_eval_clause_top.1">
  <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
  <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="3062633"/></proof>
  <proof prover="5" timelimit="30" memlimit="4000"><result status="unknown" time="1.89" steps="90753"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="eval_clauselist_bot_is_conj_eval_clause_bot" proved="true">
 <proof prover="5"><result status="valid" time="0.43" steps="47380"/></proof>
 </goal>
 <goal name="all_x_top_then_eval_setconjunction_top&#39;vc" expl="VC for all_x_top_then_eval_setconjunction_top" proved="true">
 <proof prover="5"><result status="valid" time="0.73" steps="57335"/></proof>
 </goal>
 <goal name="forall_eval_af_bot_exists_eval_af_bot&#39;vc" expl="VC for forall_eval_af_bot_exists_eval_af_bot" proved="true">
 <proof prover="5"><result status="valid" time="0.40" steps="44132"/></proof>
 </goal>
 <goal name="eval_cl_bot_then_exists_eval_clause_bot&#39;vc" expl="VC for eval_cl_bot_then_exists_eval_clause_bot" proved="true">
 <proof prover="5"><result status="valid" time="0.77" steps="65352"/></proof>
 </goal>
 <goal name="eval_append" proved="true">
 <proof prover="5"><result status="valid" time="0.52" steps="52243"/></proof>
 </goal>
</theory>
<theory name="SAT">
 <goal name="rs_unsat_then_not_sat" proved="true">
 <proof prover="5"><result status="valid" time="0.55" steps="45735"/></proof>
 </goal>
 <goal name="af_unsat_then_not_sat" proved="true">
 <proof prover="5"><result status="valid" time="0.71" steps="45936"/></proof>
 </goal>
 <goal name="set_unsat_then_not_sat" proved="true">
 <proof prover="5"><result status="valid" time="0.70" steps="46144"/></proof>
 </goal>
 <goal name="all_set_without_bot_eval_set&#39;vc" expl="VC for all_set_without_bot_eval_set">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="1320633"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="66329"/></proof>
 <transf name="split_vc" >
  <goal name="all_set_without_bot_eval_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.70" steps="49253"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.63" steps="48364"/></proof>
  </goal>
  <goal name="all_set_without_bot_eval_set&#39;vc.2" expl="postcondition">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="4" timelimit="30" memlimit="4000"><undone/></proof>
  <proof prover="5" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="2928673"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="bot_not_in_set_then_sat_set&#39;vc" expl="VC for bot_not_in_set_then_sat_set" proved="true">
 <proof prover="5"><result status="valid" time="0.56" steps="51917"/></proof>
 </goal>
 <goal name="subset_of_satisfiable_set&#39;vc" expl="VC for subset_of_satisfiable_set" proved="true">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="2330014"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="58041"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="subset_of_satisfiable_set&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="5"><result status="valid" time="0.64" steps="50887"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.1" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.77" steps="49935"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.19" steps="230309"/></proof>
  <proof prover="5"><result status="timeout" time="1.00" steps="56297"/></proof>
  </goal>
  <goal name="subset_of_satisfiable_set&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="284625"/></proof>
  <proof prover="5"><result status="timeout" time="1.00" steps="68753"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="satisfiable_clause" proved="true">
 <proof prover="5"><result status="valid" time="0.46" steps="47238"/></proof>
 </goal>
 <goal name="sublist_is_satisfiable_clauselist">
 <proof prover="1"><result status="highfailure" time="0.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="1066358"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="64668"/></proof>
 </goal>
 <goal name="sat_cl_bot_right">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="1162108"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="66352"/></proof>
 <transf name="split_vc" >
  <goal name="sat_cl_bot_right.0">
  <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="26.76"/></proof>
  <proof prover="4" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="20645975"/></proof>
  <proof prover="5" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="2585587"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="sat_cl_bot_left">
 </goal>
 <goal name="not_unsat_set_sat_set">
 </goal>
 <goal name="not_unsat_clause_sat_clause">
 </goal>
 <goal name="not_unsat_sat" proved="true">
 <proof prover="5"><result status="valid" time="0.51" steps="46530"/></proof>
 </goal>
 <goal name="not_sat_unsat" proved="true">
 <proof prover="5"><result status="valid" time="0.59" steps="46439"/></proof>
 </goal>
 <goal name="unsat_then_bot">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="944040"/></proof>
 <proof prover="5"><result status="timeout" time="1.00" steps="61725"/></proof>
 </goal>
 <goal name="is_unsat_then_p_is_bot">
 </goal>
 <goal name="unsat_permut">
 </goal>
</theory>
<theory name="ListPlus">
 <goal name="sublist&#39;vc" expl="VC for sublist">
 </goal>
 <goal name="equality_is_equal_list&#39;vc" expl="VC for equality_is_equal_list">
 </goal>
 <goal name="is_equal_list_reflexive&#39;vc" expl="VC for is_equal_list_reflexive">
 </goal>
 <goal name="is_equal_list_commutative&#39;vc" expl="VC for is_equal_list_commutative">
 </goal>
 <goal name="tuple_equality&#39;vc" expl="VC for tuple_equality">
 </goal>
 <goal name="permut_ref">
 </goal>
 <goal name="permut_trans">
 </goal>
 <goal name="permut_cl1_cl2">
 </goal>
 <goal name="concat_with_element">
 </goal>
 <goal name="num_occ_permut_concat&#39;vc" expl="VC for num_occ_permut_concat">
 </goal>
 <goal name="num_occ_concat&#39;vc" expl="VC for num_occ_concat">
 </goal>
 <goal name="num_occ_1_plus_tail&#39;vc" expl="VC for num_occ_1_plus_tail">
 </goal>
 <goal name="num_occ_permut_list&#39;vc" expl="VC for num_occ_permut_list">
 </goal>
 <goal name="permut_list_permut_sublist&#39;vc" expl="VC for permut_list_permut_sublist">
 </goal>
</theory>
<theory name="RemoveFromList">
 <goal name="removeFromList_numocc">
 </goal>
 <goal name="removeFromList_numocc_not_elem">
 </goal>
 <goal name="removeFromList_length">
 </goal>
 <goal name="removeFromList_concat_not_mem_l1">
 </goal>
 <goal name="removeFromList_concat">
 </goal>
 <goal name="removeFromList_permut">
 </goal>
 <goal name="removeFromList_permut_concat">
 </goal>
 <goal name="removeFromList_elem_not_in_list">
 </goal>
 <goal name="removeFromList_sublist">
 </goal>
</theory>
<theory name="FindOneSubset">
 <goal name="findOneSubset_if_only_if_some">
 </goal>
 <goal name="findOneSubset_mem_subset">
 </goal>
 <goal name="findOneSubset_nil">
 </goal>
 <goal name="findOneSubset_notsubset">
 </goal>
</theory>
<theory name="SetOfSymbols">
 <goal name="if_mem_then_subset_set_smb">
 </goal>
 <goal name="subset_set_smb_clauselist">
 </goal>
 <goal name="sublist_subset_set_smb">
 </goal>
</theory>
<theory name="Horn_Logic">
 <goal name="algorithmA_spec&#39;vc" expl="VC for algorithmA_spec">
 </goal>
 <goal name="permutacoes&#39;vc" expl="VC for permutacoes">
 </goal>
 <goal name="monotone_algA&#39;vc" expl="VC for monotone_algA">
 </goal>
 <goal name="smb&#39;vc" expl="VC for smb">
 </goal>
 <goal name="unsat_cl_mem_ABot_in_algorithmA&#39;vc" expl="VC for unsat_cl_mem_ABot_in_algorithmA">
 </goal>
 <goal name="not_mem_ABot_then_cl_sat&#39;vc" expl="VC for not_mem_ABot_then_cl_sat">
 </goal>
 <goal name="sat_cl_not_ABot_in_algorithmA&#39;vc" expl="VC for sat_cl_not_ABot_in_algorithmA">
 </goal>
 <goal name="mem_ABot_then_cl_unsat&#39;vc" expl="VC for mem_ABot_then_cl_unsat">
 </goal>
 <goal name="horn_logic&#39;vc" expl="VC for horn_logic">
 </goal>
 <goal name="horn_sat_completeness">
 </goal>
 <goal name="horn_unsat_completeness">
 </goal>
</theory>
<theory name="Horn">
 <goal name="length_equal_listset_to_list_fset">
 </goal>
 <goal name="removeFromList_prog&#39;vc" expl="VC for removeFromList_prog">
 </goal>
 <goal name="algorithmA&#39;vc" expl="VC for algorithmA">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="1014457"/></proof>
 <proof prover="5"><result status="highfailure" time="0.52" steps="1195"/></proof>
 <transf name="split_vc" >
  <goal name="algorithmA&#39;vc.0" expl="variant decrease">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="1004503"/></proof>
  <proof prover="5"><result status="highfailure" time="0.41" steps="951"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4"><result status="valid" time="0.25" steps="315629"/></proof>
   <proof prover="5"><result status="highfailure" time="0.40" steps="951"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.0.1" expl="variant decrease">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
   <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="26.06" steps="13079132"/></proof>
   <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.41" steps="951"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="330182"/></proof>
  <proof prover="5"><result status="highfailure" time="0.43" steps="966"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.28" steps="346834"/></proof>
  <proof prover="5"><result status="highfailure" time="0.44" steps="966"/></proof>
  </goal>
  <goal name="algorithmA&#39;vc.3" expl="precondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="1016988"/></proof>
  <proof prover="5"><result status="highfailure" time="0.42" steps="951"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.3.0" expl="precondition">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
   <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="26.09" steps="8730534"/></proof>
   <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.42" steps="951"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.4" expl="precondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="768079"/></proof>
  <proof prover="5"><result status="highfailure" time="0.46" steps="1077"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.4.0" expl="precondition">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000"><result status="highfailure" time="4.39" steps="1994316"/></proof>
   <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.53" steps="1077"/></proof>
   <transf name="inline_goal" >
    <goal name="algorithmA&#39;vc.4.0.0" expl="precondition">
    <transf name="split_all_full" >
     <goal name="algorithmA&#39;vc.4.0.0.0" expl="precondition">
     <proof prover="1"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <proof prover="4"><result status="timeout" time="1.00" steps="788569"/></proof>
     <proof prover="5"><result status="highfailure" time="0.46" steps="1156"/></proof>
     <transf name="split_vc" >
      <goal name="algorithmA&#39;vc.4.0.0.0.0" expl="precondition">
      <proof prover="1" timelimit="5" memlimit="2000"><undone/></proof>
      <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="4.33"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000"><result status="highfailure" time="3.73" steps="1164344"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.63" steps="1156"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.5" expl="precondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="836677"/></proof>
  <proof prover="5"><result status="highfailure" time="0.36" steps="957"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.5.0" expl="precondition">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000"><result status="highfailure" time="4.37" steps="2140247"/></proof>
   <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.37" steps="957"/></proof>
   <transf name="inline_goal" >
    <goal name="algorithmA&#39;vc.5.0.0" expl="precondition">
    <transf name="split_all_full" >
     <goal name="algorithmA&#39;vc.5.0.0.0" expl="precondition">
     <proof prover="1"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <proof prover="4"><result status="timeout" time="1.00" steps="942466"/></proof>
     <proof prover="5"><result status="highfailure" time="0.47" steps="1064"/></proof>
     <transf name="split_vc" >
      <goal name="algorithmA&#39;vc.5.0.0.0.0" expl="precondition">
      <proof prover="1" timelimit="5" memlimit="2000"><undone/></proof>
      <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="4.13"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000"><result status="highfailure" time="3.42" steps="1047004"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.52" steps="1064"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.6" expl="precondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="550166"/></proof>
  <proof prover="5"><result status="highfailure" time="0.41" steps="972"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.6.0" expl="precondition">
   <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
   <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="1020937"/></proof>
   <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.39" steps="972"/></proof>
   <transf name="inline_goal" >
    <goal name="algorithmA&#39;vc.6.0.0" expl="precondition">
    <transf name="split_all_full" >
     <goal name="algorithmA&#39;vc.6.0.0.0" expl="precondition">
     <proof prover="1"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <proof prover="4"><result status="timeout" time="1.00" steps="591295"/></proof>
     <proof prover="5"><result status="highfailure" time="0.49" steps="1059"/></proof>
     <transf name="split_vc" >
      <goal name="algorithmA&#39;vc.6.0.0.0.0" expl="precondition">
      <proof prover="1" timelimit="5" memlimit="2000"><undone/></proof>
      <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="3.95"/></proof>
      <proof prover="4" timelimit="5" memlimit="2000"><result status="highfailure" time="3.62" steps="953179"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.52" steps="1059"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.7" expl="precondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="984358"/></proof>
  <proof prover="5"><result status="highfailure" time="0.39" steps="940"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.7.0" expl="precondition">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="26.29"/></proof>
   <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="26.44" steps="3156451"/></proof>
   <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.39" steps="940"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.8" expl="precondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="550077"/></proof>
  <proof prover="5"><result status="highfailure" time="0.46" steps="979"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.8.0" expl="precondition">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
   <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="26.20" steps="6867110"/></proof>
   <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.41" steps="940"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.8.1" expl="precondition">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="21.12"/></proof>
   <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="19.54" steps="2430512"/></proof>
   <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.45" steps="979"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="algorithmA&#39;vc.9" expl="postcondition">
  <proof prover="1"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="868757"/></proof>
  <proof prover="5"><result status="highfailure" time="0.42" steps="933"/></proof>
  <transf name="split_vc" >
   <goal name="algorithmA&#39;vc.9.0" expl="postcondition">
   <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
   <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="26.76" steps="8333612"/></proof>
   <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.41" steps="933"/></proof>
   </goal>
   <goal name="algorithmA&#39;vc.9.1" expl="postcondition">
   <proof prover="1"><result status="highfailure" time="0.01"/></proof>
   <proof prover="3"><result status="timeout" time="1.00"/></proof>
   <proof prover="4"><result status="timeout" time="1.00" steps="919468"/></proof>
   <proof prover="5"><result status="highfailure" time="0.40" steps="933"/></proof>
   <transf name="split_vc" >
    <goal name="algorithmA&#39;vc.9.1.0" expl="postcondition">
    <proof prover="1" timelimit="30" memlimit="4000"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="22.00"/></proof>
    <proof prover="4" timelimit="30" memlimit="4000"><result status="highfailure" time="12.36" steps="6945597"/></proof>
    <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.42" steps="933"/></proof>
    </goal>
    <goal name="algorithmA&#39;vc.9.1.1" expl="postcondition">
    <proof prover="1"><result status="highfailure" time="0.01"/></proof>
    <proof prover="3"><result status="timeout" time="1.00"/></proof>
    <proof prover="4"><result status="timeout" time="1.00" steps="988482"/></proof>
    <proof prover="5"><result status="highfailure" time="0.43" steps="933"/></proof>
    <transf name="split_vc" >
     <goal name="algorithmA&#39;vc.9.1.1.0" expl="postcondition">
     <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="1.33"/></proof>
     <proof prover="4" timelimit="30" memlimit="4000"><undone/></proof>
     <proof prover="5" timelimit="30" memlimit="4000"><result status="highfailure" time="0.41" steps="933"/></proof>
     </goal>
     <goal name="algorithmA&#39;vc.9.1.1.1" expl="postcondition">
     <proof prover="1"><result status="highfailure" time="0.01"/></proof>
     <proof prover="3"><result status="timeout" time="1.00"/></proof>
     <proof prover="4"><result status="highfailure" time="0.73" steps="776019"/></proof>
     <proof prover="5"><result status="highfailure" time="0.41" steps="933"/></proof>
     <transf name="split_vc" >
      <goal name="algorithmA&#39;vc.9.1.1.1.0" expl="postcondition">
      <proof prover="1"><result status="highfailure" time="0.01"/></proof>
      <proof prover="3" timelimit="5" memlimit="2000"><undone/></proof>
      <proof prover="4" timelimit="5" memlimit="2000"><result status="highfailure" time="3.61" steps="1646072"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.43" steps="933"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="horn&#39;vc" expl="VC for horn" proved="true">
 <proof prover="1"><result status="highfailure" time="0.01"/></proof>
 <proof prover="3"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00" steps="1566570"/></proof>
 <proof prover="5"><result status="highfailure" time="0.57" steps="1137"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="horn&#39;vc.0" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.24" steps="349309"/></proof>
  <proof prover="5"><result status="highfailure" time="0.35" steps="966"/></proof>
  </goal>
  <goal name="horn&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.23" steps="330714"/></proof>
  <proof prover="5"><result status="highfailure" time="0.37" steps="966"/></proof>
  </goal>
  <goal name="horn&#39;vc.2" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.21" steps="313325"/></proof>
  <proof prover="5"><result status="highfailure" time="0.38" steps="951"/></proof>
  </goal>
  <goal name="horn&#39;vc.3" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.26" steps="396304"/></proof>
  <proof prover="5"><result status="highfailure" time="0.53" steps="1064"/></proof>
  </goal>
  <goal name="horn&#39;vc.4" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.25" steps="349346"/></proof>
  <proof prover="5"><result status="highfailure" time="0.42" steps="957"/></proof>
  </goal>
  <goal name="horn&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="valid" time="0.57"/></proof>
  <proof prover="4"><result status="timeout" time="1.00" steps="1396520"/></proof>
  <proof prover="5"><result status="highfailure" time="0.43" steps="961"/></proof>
  </goal>
  <goal name="horn&#39;vc.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.27" steps="345516"/></proof>
  <proof prover="5"><result status="highfailure" time="0.41" steps="940"/></proof>
  </goal>
  <goal name="horn&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.31" steps="404485"/></proof>
  <proof prover="5"><result status="highfailure" time="0.45" steps="968"/></proof>
  </goal>
  <goal name="horn&#39;vc.8" expl="postcondition" proved="true">
  <proof prover="1" timelimit="5" memlimit="2000"><result status="highfailure" time="0.01"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="7152812"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="highfailure" time="0.33" steps="1037"/></proof>
  <transf name="inline_goal" proved="true" >
   <goal name="horn&#39;vc.8.0" expl="postcondition" proved="true">
   <transf name="split_all_full" proved="true" >
    <goal name="horn&#39;vc.8.0.0" expl="postcondition" proved="true">
    <proof prover="4"><result status="valid" time="0.17" steps="222700"/></proof>
    <proof prover="5"><result status="highfailure" time="0.53" steps="1142"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
