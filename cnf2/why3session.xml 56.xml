<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="1" name="CVC4" version="1.8" timelimit="1200" steplimit="0" memlimit="8192"/>
<prover id="2" name="Spass" version="3.7" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="2.6" timelimit="1200" steplimit="0" memlimit="8192"/>
<prover id="5" name="Alt-Ergo" version="2.4.0" timelimit="30" steplimit="0" memlimit="4000"/>
<file format="whyml">
<path name=".."/><path name="cnf2.mlw"/>
<theory name="Aux">
 <goal name="size&#39;vc" expl="VC for size">
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.24" steps="18200"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="highfailure" time="0.64" steps="599226"/></proof>
 </goal>
 <goal name="size_cnf_clause&#39;vc" expl="VC for size_cnf_clause">
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.23" steps="18961"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="highfailure" time="0.65" steps="623948"/></proof>
 </goal>
 <goal name="size_cnf&#39;vc" expl="VC for size_cnf">
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.25" steps="20735"/></proof>
 <proof prover="2" obsolete="true"><result status="valid" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="highfailure" time="0.72" steps="673774"/></proof>
 </goal>
 <goal name="nnfc_is_implfree">
 <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="91957"/></proof>
 </goal>
 <goal name="cnf_clause_is_implfree">
 <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="97674"/></proof>
 </goal>
 <goal name="cnf_clause_is_nnfc">
 <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="97961"/></proof>
 </goal>
 <goal name="cnf_clause_is_cnf">
 <transf name="split_vc" >
  <goal name="cnf_clause_is_cnf.0">
  <transf name="compute_hyp" >
   <goal name="cnf_clause_is_cnf.0.0">
   <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.44" steps="31861"/></proof>
   <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1132718"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cnf_is_implfree">
 <proof prover="3" obsolete="true"><result status="valid" time="0.07" steps="104582"/></proof>
 </goal>
 <goal name="cnf_is_nnfc">
 <proof prover="3" obsolete="true"><result status="valid" time="0.07" steps="104869"/></proof>
 </goal>
 <goal name="cnf_clause">
 <proof prover="1" obsolete="true"><result status="valid" time="0.26" steps="24974"/></proof>
 <proof prover="3" obsolete="true"><result status="valid" time="0.11" steps="119619"/></proof>
 </goal>
</theory>
<theory name="T">
 <goal name="impl_free&#39;vc" expl="VC for impl_free">
 <transf name="split_vc" >
  <goal name="impl_free&#39;vc.0" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.44" steps="30184"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.1" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.42" steps="30501"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.2" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.41" steps="26372"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.3" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.42" steps="30644"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.4" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.38" steps="30096"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.5" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.27" steps="30933"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.6" expl="variant decrease">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.45" steps="30732"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.7" expl="postcondition">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.42" steps="30412"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nnfc&#39;vc" expl="VC for nnfc">
 <transf name="split_vc" >
  <goal name="nnfc&#39;vc.0" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="130072"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.1" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="109378"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.2" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.10" steps="124972"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.3" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="112690"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.4" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.11" steps="109848"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.5" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="113387"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.6" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.11" steps="109434"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.7" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="124943"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.8" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="109784"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.9" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.08" steps="125363"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.10" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="125332"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.11" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.11" steps="121869"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.12" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="112742"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.13" expl="precondition">
  <transf name="split_vc" >
   <goal name="nnfc&#39;vc.13.0" expl="precondition">
   <transf name="split_vc" >
    <goal name="nnfc&#39;vc.13.0.0" expl="precondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.56" steps="35965"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.5" expl="postcondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.41" steps="27635"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.4" expl="postcondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.40" steps="27595"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.6" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.05" steps="25380"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.16.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.07" steps="25421"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.0" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="151048"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.2" expl="postcondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.53" steps="35115"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="nnfc&#39;vc.15.0" expl="precondition">
   <proof prover="3" obsolete="true"><result status="valid" time="0.05" steps="8572"/></proof>
   </goal>
   <goal name="nnfc&#39;vc.16.1" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="nnfc&#39;vc.16.1.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="137505"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.6" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.0" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="7981"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.4.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.14" steps="137518"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.5" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="130547"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.3" expl="postcondition">
    <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="2.23"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.4" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="130603"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="nnfc&#39;vc.14" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.10" steps="109508"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.15" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.12" steps="130049"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.16" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.08" steps="122575"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.17" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="113323"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.18" expl="postcondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.07" steps="122544"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="distr&#39;vc" expl="VC for distr">
 <transf name="split_vc" >
  <goal name="distr&#39;vc.0" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.16" steps="147404"/></proof>
  </goal>
  <goal name="distr&#39;vc.1" expl="precondition">
  <proof prover="3" timelimit="5" obsolete="true"><result status="valid" time="0.69" steps="830504"/></proof>
  </goal>
  <goal name="distr&#39;vc.2" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="154197"/></proof>
  </goal>
  <goal name="distr&#39;vc.3" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.15" steps="147406"/></proof>
  </goal>
  <goal name="distr&#39;vc.4" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.15" steps="164043"/></proof>
  </goal>
  <goal name="distr&#39;vc.5" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.61" steps="888127"/></proof>
  </goal>
  <goal name="distr&#39;vc.6" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.29" steps="333557"/></proof>
  </goal>
  <goal name="distr&#39;vc.7" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.69" steps="888178"/></proof>
  </goal>
  <goal name="distr&#39;vc.8" expl="variant decrease">
  <proof prover="3" obsolete="true"><result status="valid" time="0.63" steps="830502"/></proof>
  </goal>
  <goal name="distr&#39;vc.9" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.23" steps="353723"/></proof>
  </goal>
  <goal name="distr&#39;vc.10" expl="variant decrease">
  <transf name="split_vc" >
   <goal name="distr&#39;vc.10.0" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="distr&#39;vc.10.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="127108"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.1.3" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="121729"/></proof>
    </goal>
    <goal name="distr&#39;vc.4.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="126728"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.1.1" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="127108"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.10.1" expl="variant decrease">
   </goal>
   <goal name="distr&#39;vc.11.1" expl="precondition">
   <transf name="split_vc" >
    <goal name="distr&#39;vc.11.1.0" expl="precondition">
    <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><result status="valid" time="5.91"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.3.3" expl="postcondition">
    <proof prover="2" timelimit="1200" memlimit="8192" obsolete="true"><result status="valid" time="2.40"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.3.2" expl="postcondition">
    <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><result status="valid" time="8.32"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.3.1" expl="postcondition">
    <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><result status="valid" time="8.39"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.11.2" expl="precondition">
   </goal>
   <goal name="distr&#39;vc.11.0" expl="precondition">
   <transf name="split_vc" >
    <goal name="distr&#39;vc.11.0.0" expl="precondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.45" steps="30099"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.0.0" expl="postcondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.46" steps="31397"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.0.2" expl="postcondition">
    <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.36" steps="32115"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.0.3" expl="postcondition">
    <proof prover="2" obsolete="true"><result status="valid" time="0.15"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.11.4" expl="precondition">
   <transf name="split_vc" >
    <goal name="distr&#39;vc.11.4.0" expl="precondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.14" steps="144864"/></proof>
    </goal>
    <goal name="distr&#39;vc.9.0.0" expl="precondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.16" steps="169363"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.2.0" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.17" steps="180791"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.2.1" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.16" steps="169363"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="distr&#39;vc.11" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="154199"/></proof>
  </goal>
  <goal name="distr&#39;vc.12" expl="postcondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.14" steps="155928"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cnfc&#39;vc" expl="VC for cnfc">
 <transf name="split_vc" >
  <goal name="cnfc&#39;vc.0" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.42"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.1" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.2" expl="variant decrease">
  <transf name="split_vc" >
   <goal name="cnfc&#39;vc.2.0" expl="variant decrease">
   </goal>
   <goal name="cnfc&#39;vc.2.1" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="1.36"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.2.2" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="0.06"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.2.3" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="1.20"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.2.4" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="1.36"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.2.5" expl="variant decrease">
   </goal>
  </transf>
  </goal>
  <goal name="cnfc&#39;vc.3" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.10" steps="179647"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.4" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="0.20"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.5" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.37"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.6" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.17"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.7" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.8" expl="precondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.18"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.9" expl="postcondition">
  <proof prover="2" obsolete="true"><result status="valid" time="0.40"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t&#39;vc" expl="VC for t">
 <proof prover="2" obsolete="true"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="to_cnf_type_aux&#39;vc" expl="VC for to_cnf_type_aux">
 <transf name="split_vc" >
  <goal name="to_cnf_type_aux&#39;vc.0" expl="unreachable point">
  <transf name="split_vc" >
   <goal name="to_cnf_type_aux&#39;vc.0.0" expl="unreachable point">
   <proof prover="4" obsolete="true"><result status="valid" time="0.75"/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.4.2" expl="precondition">
   <proof prover="4" obsolete="true"><result status="valid" time="1.12"/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.4.0" expl="precondition">
   <proof prover="4" obsolete="true"><result status="valid" time="0.83"/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.3.0" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="0.79"/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.6.2" expl="postcondition">
   <proof prover="4" obsolete="true"><result status="valid" time="0.78"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.1" expl="variant decrease">
  <proof prover="2" obsolete="true"><result status="valid" time="0.12"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.2" expl="precondition">
  <proof prover="1" obsolete="true"><result status="valid" time="0.51" steps="37246"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.3" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.39" steps="31917"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.4" expl="precondition">
  <proof prover="1" obsolete="true"><result status="valid" time="0.51" steps="31955"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.5" expl="unreachable point">
  <proof prover="1" obsolete="true"><result status="valid" time="0.55" steps="37208"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.6" expl="postcondition">
  <proof prover="1" obsolete="true"><result status="valid" time="0.40" steps="32196"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_cnf_type&#39;vc" expl="VC for to_cnf_type">
 <transf name="split_vc" >
  <goal name="to_cnf_type&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.39" steps="32049"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.1" expl="precondition">
  <proof prover="1" obsolete="true"><result status="valid" time="0.55" steps="36983"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.2" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.48" steps="37021"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.3" expl="precondition">
  <proof prover="4" obsolete="true"><result status="valid" time="1.28"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.4" expl="precondition">
  <proof prover="3" obsolete="true"><result status="valid" time="0.11" steps="191992"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.5" expl="postcondition">
  <transf name="split_vc" >
   <goal name="to_cnf_type&#39;vc.5.0" expl="postcondition">
   </goal>
   <goal name="to_cnf_type&#39;vc.5.1" expl="postcondition">
   <proof prover="4" obsolete="true"><result status="valid" time="0.12"/></proof>
   </goal>
   <goal name="to_cnf_type&#39;vc.1.1" expl="precondition">
   <proof prover="4" obsolete="true"><result status="valid" time="1.43"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_formula_aux&#39;vc" expl="VC for to_formula_aux">
 <transf name="split_vc" >
  <goal name="to_formula_aux&#39;vc.0" expl="variant decrease">
  <transf name="split_vc" >
   <goal name="to_formula_aux&#39;vc.0.0" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="to_formula_aux&#39;vc.0.0.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.1.0.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.07"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.07"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.08"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.2" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.08"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.1" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_formula_aux&#39;vc.0.1" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="to_formula_aux&#39;vc.0.1.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.1.1.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.06"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.14"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.3" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.1.1.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.15"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.14"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.15"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_formula_aux&#39;vc.1.0" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="to_formula_aux&#39;vc.1.0.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.67"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.70"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.1" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.90"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.2" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.87"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.65"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.74"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.3" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.79"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.73"/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_formula_aux&#39;vc.4.2" expl="postcondition">
   <transf name="split_vc" >
    <goal name="to_formula_aux&#39;vc.4.2.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.1" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.2" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.3" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.11"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.18"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.8" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.12"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="to_formula_aux&#39;vc.1" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.49" steps="35744"/></proof>
  </goal>
  <goal name="to_formula_aux&#39;vc.2" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.49" steps="35771"/></proof>
  </goal>
  <goal name="to_formula_aux&#39;vc.3" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.46" steps="35771"/></proof>
  </goal>
  <goal name="to_formula_aux&#39;vc.4" expl="postcondition">
  <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.52" steps="35744"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_formula&#39;vc" expl="VC for to_formula">
 <transf name="split_vc" >
  <goal name="to_formula&#39;vc.0" expl="variant decrease">
  <proof prover="1" obsolete="true"><result status="valid" time="0.44" steps="39574"/></proof>
  </goal>
  <goal name="to_formula&#39;vc.1" expl="precondition">
  <transf name="split_vc" >
   <goal name="to_formula&#39;vc.1.0" expl="precondition">
   <proof prover="4" obsolete="true"><result status="valid" time="2.12"/></proof>
   </goal>
   <goal name="to_formula&#39;vc.3.2" expl="postcondition">
   <proof prover="4" obsolete="true"><result status="valid" time="2.35"/></proof>
   </goal>
   <goal name="to_formula&#39;vc.0.0" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="2.04"/></proof>
   </goal>
   <goal name="to_formula&#39;vc.0.0" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="2.24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="to_formula&#39;vc.2" expl="unreachable point">
  <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="159337"/></proof>
  </goal>
  <goal name="to_formula&#39;vc.3" expl="postcondition">
  <proof prover="1" obsolete="true"><result status="valid" time="0.41" steps="37678"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_equiv">
 <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="185302"/></proof>
 </goal>
 <goal name="equiv_to_cnf">
 <proof prover="3" obsolete="true"><result status="valid" time="0.11" steps="188061"/></proof>
 </goal>
 <goal name="equiv_to_cnf2">
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.35" steps="40413"/></proof>
 </goal>
 <goal name="refl0">
 <proof prover="3" obsolete="true"><result status="valid" time="0.23" steps="516925"/></proof>
 </goal>
 <goal name="refl1">
 <proof prover="1" obsolete="true"><result status="valid" time="0.59" steps="41964"/></proof>
 <proof prover="3" obsolete="true"><result status="valid" time="0.20" steps="291901"/></proof>
 </goal>
 <goal name="refl2">
 <proof prover="1" obsolete="true"><result status="valid" time="0.47" steps="36898"/></proof>
 <proof prover="2" timelimit="1200" memlimit="8192" obsolete="true"><result status="valid" time="0.06"/></proof>
 <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="162497"/></proof>
 </goal>
 <goal name="absurd_cnf">
 <proof prover="4" obsolete="true"><result status="valid" time="1.81"/></proof>
 </goal>
</theory>
</file>
<file format="whyml">
<path name=".."/><path name="formula2.mlw"/>
<theory name="PropositionalFormula">
 <goal name="comm_and" proved="true">
 <proof prover="1"><result status="valid" time="0.23" steps="15986"/></proof>
 </goal>
 <goal name="comm_or" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="16026"/></proof>
 </goal>
 <goal name="dist_and" proved="true">
 <proof prover="1"><result status="valid" time="0.33" steps="20897"/></proof>
 </goal>
 <goal name="dist_or" proved="true">
 <proof prover="1"><result status="valid" time="0.36" steps="22246"/></proof>
 </goal>
 <goal name="ident_and" proved="true">
 <proof prover="1"><result status="valid" time="0.26" steps="17856"/></proof>
 </goal>
 <goal name="ident_or" proved="true">
 <proof prover="1"><result status="valid" time="0.26" steps="18042"/></proof>
 </goal>
 <goal name="uniq_compl" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="16288"/></proof>
 </goal>
 <goal name="compl_and" proved="true">
 <proof prover="1"><result status="valid" time="0.28" steps="18486"/></proof>
 </goal>
 <goal name="compl_or" proved="true">
 <proof prover="1"><result status="valid" time="0.29" steps="18669"/></proof>
 </goal>
 <goal name="idem_and" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="16383"/></proof>
 </goal>
 <goal name="idem_or" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="16410"/></proof>
 </goal>
 <goal name="bound_and" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="16606"/></proof>
 </goal>
 <goal name="bound_or" proved="true">
 <proof prover="1"><result status="valid" time="0.24" steps="16636"/></proof>
 </goal>
 <goal name="absorp_and" proved="true">
 <proof prover="1"><result status="valid" time="0.31" steps="20798"/></proof>
 </goal>
 <goal name="absorp_or" proved="true">
 <proof prover="1"><result status="valid" time="0.32" steps="21713"/></proof>
 </goal>
 <goal name="assoc_and" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="25009"/></proof>
 </goal>
 <goal name="assoc_or" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="24983"/></proof>
 </goal>
 <goal name="demorgan_and" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="24984"/></proof>
 </goal>
 <goal name="demorgan_or" proved="true">
 <proof prover="1"><result status="valid" time="0.42" steps="27457"/></proof>
 </goal>
 <goal name="negtop" proved="true">
 <proof prover="1"><result status="valid" time="0.26" steps="18586"/></proof>
 </goal>
 <goal name="negbot" proved="true">
 <proof prover="1"><result status="valid" time="0.27" steps="19103"/></proof>
 </goal>
 <goal name="double_neg" proved="true">
 <proof prover="1"><result status="valid" time="0.27" steps="18366"/></proof>
 </goal>
 <goal name="dist_ord" proved="true">
 <proof prover="1"><result status="valid" time="0.20" steps="15419"/></proof>
 </goal>
 <goal name="disj_and" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="26214"/></proof>
 </goal>
 <goal name="disj_or" proved="true">
 <proof prover="1"><result status="valid" time="0.27" steps="18780"/></proof>
 </goal>
 <goal name="modus_ponens" proved="true">
 <proof prover="1"><result status="valid" time="0.47" steps="29080"/></proof>
 </goal>
 <goal name="modus_tollens" proved="true">
 <proof prover="1"><result status="valid" time="1.14" steps="40413"/></proof>
 </goal>
 <goal name="implic" proved="true">
 <proof prover="1"><result status="valid" time="0.36" steps="22479"/></proof>
 </goal>
 <goal name="absur" proved="true">
 <proof prover="1"><result status="valid" time="1.03" steps="45516"/></proof>
 </goal>
 <goal name="disj_syl" proved="true">
 <proof prover="1"><result status="valid" time="1.27" steps="41904"/></proof>
 </goal>
 <goal name="impl_chain" proved="true">
 <proof prover="1"><result status="valid" time="5.06" steps="74189"/></proof>
 </goal>
 <goal name="impl_comb" proved="true">
 <proof prover="1"><result status="valid" time="6.64" steps="72036"/></proof>
 </goal>
 <goal name="currying" proved="true">
 <proof prover="1"><result status="valid" time="1.00" steps="43942"/></proof>
 </goal>
 <goal name="contrapos" proved="true">
 <proof prover="1"><result status="valid" time="0.39" steps="24537"/></proof>
 </goal>
 <goal name="pierce" proved="true">
 <proof prover="1"><result status="valid" time="6.33" steps="71278"/></proof>
 </goal>
 <goal name="eval_nil" proved="true">
 <proof prover="3"><result status="valid" time="0.09" steps="86370"/></proof>
 </goal>
 <goal name="eval_single_comm" proved="true">
 <proof prover="2"><result status="valid" time="0.58"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="536967"/></proof>
 </goal>
 <goal name="asserting" proved="true">
 <proof prover="3"><result status="valid" time="0.09" steps="136180"/></proof>
 </goal>
 <goal name="asserting_concat" proved="true">
 <proof prover="3"><result status="valid" time="0.08" steps="105525"/></proof>
 </goal>
 <goal name="eval_single" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eval_single.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="x">
   <goal name="eval_single.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="eval_single.0.0.0" proved="true">
    <proof prover="3"><result status="valid" time="0.10" steps="88473"/></proof>
    </goal>
    <goal name="eval_single.0.0.1" proved="true">
    <proof prover="1" timelimit="1" memlimit="1000"><result status="valid" time="0.54" steps="36227"/></proof>
    <proof prover="2"><result status="timeout" time="1.00"/></proof>
    <proof prover="3"><result status="timeout" time="1.00" steps="1191843"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_single_comm_2" proved="true">
 <proof prover="2"><result status="valid" time="0.05"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="543683"/></proof>
 </goal>
 <goal name="eval_double" proved="true">
 <proof prover="1" timelimit="1" memlimit="1000"><result status="valid" time="0.79" steps="65857"/></proof>
 <proof prover="2"><result status="timeout" time="1.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="547085"/></proof>
 </goal>
 <goal name="eval_n">
 <transf name="split_vc" >
  <goal name="eval_n.0">
  <transf name="induction_arg_ty_lex" arg1="y">
   <goal name="eval_n.0.0">
   <transf name="split_vc" >
    <goal name="eval_n.0.0.0" proved="true">
    <proof prover="3" timelimit="5"><result status="valid" time="0.08" steps="92328"/></proof>
    </goal>
    <goal name="eval_n.0.0.1">
    <transf name="replace" arg1="(eval_cnf_clause (Cons x1 x) v)" arg2="(eval_cnf_clause x v \*/ eval_cnf_clause (Cons x1 Nil) v)">
     <goal name="eval_n.0.0.1.0">
     <transf name="replace" arg1="(eval_cnf_clause x2 v \*/ (eval_cnf_clause x v
\*/ eval_cnf_clause (Cons x1 (Nil: list atom)) v))" arg2="((eval_cnf_clause x2 v
\*/ eval_cnf_clause x v) \*/ eval_cnf_clause (Cons x1 (Nil: list atom)) v)">
      <goal name="eval_n.0.0.1.0.0">
      <transf name="replace" arg1="(eval_cnf_clause x2 v \*/ eval_cnf_clause x v)" arg2="(eval_cnf_clause (x2++x) v)">
       <goal name="eval_n.0.0.1.0.0.0">
       <transf name="replace" arg1="(eval_cnf_clause (x2 ++ x) v \*/ eval_cnf_clause (Cons x1 Nil) v)" arg2="(eval_cnf_clause (x2 ++ x ++ (Cons x1 Nil)) v)">
        <goal name="eval_n.0.0.1.0.0.0.0">
        <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="1290543"/></proof>
        <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
        <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="20518363"/></proof>
        <proof prover="5"><result status="highfailure" time="0.01"/></proof>
        <transf name="replace" arg1="((x2 ++ x) ++ Cons x1 Nil)" arg2="(x2 ++ (x ++ (Cons x1 Nil)))">
         <goal name="eval_n.0.0.1.0.0.0.0.0">
         </goal>
         <goal name="eval_n.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="3"><result status="valid" time="0.08" steps="90508"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="eval_n.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="3"><result status="valid" time="0.06" steps="90636"/></proof>
        </goal>
       </transf>
       <transf name="replace" arg1="(eval_cnf_clause (x2 ++ x) v \*/ eval_cnf_clause (Cons x1 (Nil: list atom)) v)" arg2="(eval_cnf_clause (Cons x1 (Nil: list atom)) v \*/ eval_cnf_clause (x2 ++ x) v)">
        <goal name="eval_n.0.0.1.0.0.0.0">
        <transf name="replace" arg1="(eval_cnf_clause (Cons x1 (Nil: list atom)) v
\*/ eval_cnf_clause (x2 ++ x) v)" arg2="(eval_cnf_clause ((Cons x1 Nil) ++ x2 ++ x) v)">
         <goal name="eval_n.0.0.1.0.0.0.0.0">
         <transf name="replace" arg1="(Cons x1 Nil ++ x2)" arg2="(x2 ++ Cons x1 Nil)">
          <goal name="eval_n.0.0.1.0.0.0.0.0.0">
          </goal>
          <goal name="eval_n.0.0.1.0.0.0.0.0.1" expl="equality hypothesis">
          <proof prover="1" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="1256484"/></proof>
          <proof prover="2" timelimit="30" memlimit="4000"><result status="timeout" time="30.00"/></proof>
          <proof prover="3" timelimit="30" memlimit="4000"><result status="timeout" time="30.00" steps="6610796"/></proof>
          <proof prover="5"><result status="highfailure" time="0.01"/></proof>
          </goal>
         </transf>
         </goal>
         <goal name="eval_n.0.0.1.0.0.0.0.1" expl="equality hypothesis" proved="true">
         <proof prover="3"><result status="valid" time="0.07" steps="99454"/></proof>
         </goal>
        </transf>
        </goal>
        <goal name="eval_n.0.0.1.0.0.0.1" expl="equality hypothesis" proved="true">
        <proof prover="3"><result status="valid" time="0.07" steps="90574"/></proof>
        </goal>
       </transf>
       </goal>
       <goal name="eval_n.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="3"><result status="valid" time="0.05" steps="47690"/></proof>
       </goal>
      </transf>
      </goal>
      <goal name="eval_n.0.0.1.0.1" expl="equality hypothesis" proved="true">
      <proof prover="3"><result status="valid" time="0.06" steps="88899"/></proof>
      </goal>
     </transf>
     </goal>
     <goal name="eval_n.0.0.1.1" expl="equality hypothesis" proved="true">
     <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="98396"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="comm_cnf_clause">
 <transf name="split_vc" >
  <goal name="comm_cnf_clause.0">
  <transf name="induction_arg_ty_lex" arg1="y">
   <goal name="comm_cnf_clause.0.0">
   <transf name="split_vc" >
    <goal name="comm_cnf_clause.0.0.0">
    <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="89659"/></proof>
    </goal>
    <goal name="comm_cnf_clause.0.0.1">
    <transf name="assert" arg1="(equiv_cnf_clause (Cons x1 x) (x ++ (Cons x1 Nil)))">
     <goal name="comm_cnf_clause.0.0.1.0" expl="asserted formula">
     <proof prover="3" obsolete="true"><result status="valid" time="0.07" steps="89588"/></proof>
     </goal>
     <goal name="comm_cnf_clause.0.0.1.1">
     <transf name="replace" arg1="(Cons x1 x)" arg2="(x ++ (Cons x1 Nil))">
      <goal name="comm_cnf_clause.0.0.1.1.0">
      </goal>
      <goal name="comm_cnf_clause.0.0.1.1.1" expl="equality hypothesis">
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="195727"/></proof>
      <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><undone/></proof>
      <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="22555015"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    <transf name="replace" arg1="(Cons x1 x)" arg2="(x ++ (Cons x1 Nil))">
     <goal name="comm_cnf_clause.0.0.1.0">
     </goal>
     <goal name="comm_cnf_clause.0.0.1.1" expl="equality hypothesis">
     <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="1017202"/></proof>
     <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="25431262"/></proof>
     <proof prover="5" obsolete="true"><result status="highfailure" time="0.01"/></proof>
     </goal>
    </transf>
    <transf name="unfold" arg1="equiv_cnf_clause">
     <goal name="comm_cnf_clause.0.0.1.0">
     <transf name="split_vc" >
      <goal name="comm_cnf_clause.0.0.1.0.0">
      <transf name="replace" arg1="(eval_cnf_clause (x2 ++ Cons x1 x) v)" arg2="((eval_cnf_clause x2 v) \*/ (eval_cnf_clause (Cons x1 x) v))">
       <goal name="comm_cnf_clause.0.0.1.0.0.0">
       </goal>
       <goal name="comm_cnf_clause.0.0.1.0.0.1" expl="equality hypothesis">
       <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="68907"/></proof>
       <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><undone/></proof>
       <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="597045"/></proof>
       <proof prover="5" timelimit="1" memlimit="1000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="comm_cnf">
 </goal>
 <goal name="assoc_cnf_clause">
 <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="96281"/></proof>
 </goal>
 <goal name="assoc_cnf">
 <proof prover="1" timelimit="1" memlimit="1000" obsolete="true"><result status="timeout" time="1.00" steps="95872"/></proof>
 <proof prover="2" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1183441"/></proof>
 <proof prover="5" timelimit="1" memlimit="1000" obsolete="true"><result status="highfailure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="assoc_cnf.0">
  <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="562635"/></proof>
  <proof prover="2" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="1342705"/></proof>
  <proof prover="5" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
<file format="whyml" proved="true">
<path name=".."/><path name="boolean_algebra.mlw"/>
<theory name="BooleanAlgebra" proved="true">
 <goal name="lattice_ring" proved="true">
 <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.10" steps="6632"/></proof>
 <proof prover="3" timelimit="5"><result status="highfailure" time="3.47" steps="2331047"/></proof>
 </goal>
 <goal name="comm_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1711"/></proof>
 </goal>
 <goal name="comm_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1728"/></proof>
 </goal>
 <goal name="dist_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1757"/></proof>
 </goal>
 <goal name="dist_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1786"/></proof>
 </goal>
 <goal name="ident_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1799"/></proof>
 </goal>
 <goal name="ident_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1812"/></proof>
 </goal>
 <goal name="uniq_compl" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="16894"/></proof>
 </goal>
 <goal name="compl_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.10" steps="55576"/></proof>
 </goal>
 <goal name="compl_or" proved="true">
 <proof prover="2" timelimit="1200" memlimit="8192"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="idem_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1888"/></proof>
 </goal>
 <goal name="idem_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="1901"/></proof>
 </goal>
 <goal name="boundbot" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1910"/></proof>
 </goal>
 <goal name="boundtop" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1919"/></proof>
 </goal>
 <goal name="bound_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1932"/></proof>
 </goal>
 <goal name="bound_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1945"/></proof>
 </goal>
 <goal name="absorp_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1962"/></proof>
 </goal>
 <goal name="absorp_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1979"/></proof>
 </goal>
 <goal name="assoc_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="2004"/></proof>
 </goal>
 <goal name="assoc_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="2029"/></proof>
 </goal>
 <goal name="demorgan_and" proved="true">
 <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="3.02" steps="278114"/></proof>
 <proof prover="3" timelimit="5"><result status="highfailure" time="3.60" steps="727804"/></proof>
 </goal>
 <goal name="demorgan_or" proved="true">
 <proof prover="2" timelimit="1200" memlimit="8192"><result status="valid" time="1.38"/></proof>
 </goal>
 <goal name="negtop" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="18872"/></proof>
 </goal>
 <goal name="negbot" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="22153"/></proof>
 </goal>
 <goal name="double_neg" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.26" steps="152268"/></proof>
 </goal>
 <goal name="dist_ord" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="22803"/></proof>
 </goal>
 <goal name="disj_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="22681"/></proof>
 </goal>
 <goal name="disj_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="26668"/></proof>
 </goal>
 <goal name="modus_ponens" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.11" steps="58632"/></proof>
 </goal>
 <goal name="modus_tollens" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="32049"/></proof>
 </goal>
 <goal name="implic" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="2330"/></proof>
 </goal>
 <goal name="absur" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.15" steps="112987"/></proof>
 </goal>
 <goal name="disj_syl" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.09" steps="55074"/></proof>
 </goal>
 <goal name="impl_chain" proved="true">
 <proof prover="1" timelimit="5" memlimit="1000"><result status="valid" time="0.32" steps="32383"/></proof>
 <proof prover="3" timelimit="5"><result status="highfailure" time="4.28" steps="784944"/></proof>
 </goal>
 <goal name="impl_comb" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.45" steps="164818"/></proof>
 </goal>
 <goal name="currying" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="33340"/></proof>
 </goal>
 <goal name="contrapos" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="33051"/></proof>
 </goal>
 <goal name="g" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="15687"/></proof>
 </goal>
</theory>
<theory name="SwitchingAlgebra" proved="true">
 <goal name="ifnottop_thenbot" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.18" steps="189424"/></proof>
 </goal>
 <goal name="ifnotbot_thentop" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="12320"/></proof>
 </goal>
</theory>
</file>
</why3session>
