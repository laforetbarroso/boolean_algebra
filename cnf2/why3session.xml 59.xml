<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.6" alternative="counterexamples" timelimit="1200" steplimit="0" memlimit="8192"/>
<prover id="1" name="CVC4" version="1.8" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Spass" version="3.7" timelimit="30" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.8.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Eprover" version="2.6" timelimit="1200" steplimit="0" memlimit="8192"/>
<prover id="5" name="Alt-Ergo" version="2.4.0" timelimit="30" steplimit="0" memlimit="4000"/>
<prover id="6" name="CVC4" version="1.6" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="7" name="Alt-Ergo" version="2.3.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml" proved="true">
<path name=".."/><path name="cnf2.mlw"/>
<theory name="Aux" proved="true">
 <goal name="size&#39;vc" expl="VC for size" proved="true">
 <proof prover="1" obsolete="true"><result status="valid" time="0.24" steps="18200"/></proof>
 <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="highfailure" time="0.64" steps="599226"/></proof>
 <proof prover="6"><result status="valid" time="0.13" steps="18829"/></proof>
 </goal>
 <goal name="size_cnf_clause&#39;vc" expl="VC for size_cnf_clause" proved="true">
 <proof prover="1" obsolete="true"><result status="valid" time="0.23" steps="18961"/></proof>
 <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="highfailure" time="0.65" steps="623948"/></proof>
 <proof prover="6"><result status="valid" time="0.12" steps="20364"/></proof>
 </goal>
 <goal name="size_cnf&#39;vc" expl="VC for size_cnf" proved="true">
 <proof prover="1" obsolete="true"><result status="valid" time="0.25" steps="20735"/></proof>
 <proof prover="2" timelimit="1"><result status="valid" time="0.50"/></proof>
 <proof prover="3" obsolete="true"><result status="highfailure" time="0.72" steps="673774"/></proof>
 </goal>
 <goal name="nnfc_is_implfree" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="99713"/></proof>
 </goal>
 <goal name="cnf_clause_is_implfree" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="105430"/></proof>
 </goal>
 <goal name="cnf_clause_is_nnfc" proved="true">
 <proof prover="3"><result status="valid" time="0.06" steps="105717"/></proof>
 </goal>
 <goal name="cnf_clause_is_cnf" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cnf_clause_is_cnf.0" proved="true">
  <transf name="compute_hyp" proved="true" >
   <goal name="cnf_clause_is_cnf.0.0" proved="true">
   <proof prover="1" obsolete="true"><result status="valid" time="0.44" steps="31861"/></proof>
   <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
   <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1132718"/></proof>
   <proof prover="6"><result status="valid" time="0.19" steps="24530"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="cnf_is_implfree" proved="true">
 <proof prover="3"><result status="valid" time="0.07" steps="112338"/></proof>
 </goal>
 <goal name="cnf_is_nnfc" proved="true">
 <proof prover="3"><result status="valid" time="0.07" steps="112625"/></proof>
 </goal>
 <goal name="cnf_clause" proved="true">
 <proof prover="1" timelimit="1200" memlimit="8192" obsolete="true"><result status="valid" time="0.26" steps="24974"/></proof>
 <proof prover="3"><result status="valid" time="0.11" steps="127375"/></proof>
 </goal>
</theory>
<theory name="T" proved="true">
 <goal name="impl_free&#39;vc" expl="VC for impl_free" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="impl_free&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.15" steps="23454"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="26757"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="26831"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.3" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="26480"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="26554"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="26799"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="26873"/></proof>
  </goal>
  <goal name="impl_free&#39;vc.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="2.71"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="2931000"/></proof>
  <proof prover="6"><result status="timeout" time="1.00" steps="71239"/></proof>
  <proof prover="7"><result status="highfailure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="nnfc&#39;vc" expl="VC for nnfc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="nnfc&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.11" steps="24040"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.11" steps="23842"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="27741"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="24022"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.15" steps="28268"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="24212"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="28022"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.11" steps="24068"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.8" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.15" steps="28551"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="24258"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.10" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="26836"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.11" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.09" steps="22477"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.12" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="26914"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.13" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.09" steps="22531"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.14" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="27140"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.15" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.09" steps="22477"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.16" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="nnfc&#39;vc.16.0" expl="variant decrease" proved="true">
   <proof prover="3"><result status="failure" time="0.00"/></proof>
   <proof prover="6"><result status="valid" time="0.11" steps="23909"/></proof>
   </goal>
   <goal name="nnfc&#39;vc.16.1" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="nnfc&#39;vc.16.1.0" expl="variant decrease" proved="true">
    <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
    <proof prover="6"><result status="valid" time="0.13" steps="27171"/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.0" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.06" steps="7981"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.4.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.14" steps="137518"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.5" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="130547"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.16.1.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="137505"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.4" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="130603"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.2.3" expl="postcondition">
    <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><result status="valid" time="2.23"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="nnfc&#39;vc.13.0" expl="precondition">
   <transf name="split_vc" >
    <goal name="nnfc&#39;vc.13.0.0" expl="precondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.56" steps="35965"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.5" expl="postcondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.41" steps="27635"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.4" expl="postcondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.40" steps="27595"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.6" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.05" steps="25380"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.16.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.07" steps="25421"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.0" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.09" steps="151048"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="nnfc&#39;vc.18.0.2" expl="postcondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.53" steps="35115"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="nnfc&#39;vc.17" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.09" steps="22531"/></proof>
  </goal>
  <goal name="nnfc&#39;vc.18" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="3.17"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="2595332"/></proof>
  <proof prover="6"><result status="timeout" time="1.00" steps="63200"/></proof>
  <proof prover="7"><result status="highfailure" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="distr&#39;vc" expl="VC for distr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="distr&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.15" steps="29752"/></proof>
  </goal>
  <goal name="distr&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.10" steps="24226"/></proof>
  </goal>
  <goal name="distr&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.15" steps="29877"/></proof>
  </goal>
  <goal name="distr&#39;vc.3" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.10" steps="24331"/></proof>
  </goal>
  <goal name="distr&#39;vc.4" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.22" steps="33336"/></proof>
  </goal>
  <goal name="distr&#39;vc.5" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="24480"/></proof>
  </goal>
  <goal name="distr&#39;vc.6" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.21" steps="33419"/></proof>
  </goal>
  <goal name="distr&#39;vc.7" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="24559"/></proof>
  </goal>
  <goal name="distr&#39;vc.8" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="distr&#39;vc.8.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="distr&#39;vc.8.0.0" expl="variant decrease" proved="true">
    <proof prover="3"><result status="failure" time="0.00"/></proof>
    <proof prover="6"><result status="valid" time="0.15" steps="26363"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.1.3" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="121729"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.4.0.0" expl="variant decrease">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="126728"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.1.1" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.13" steps="127108"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.8.1" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="distr&#39;vc.8.1.0" expl="variant decrease" proved="true">
    <proof prover="2" timelimit="1200" memlimit="8192"><result status="failure" time="0.00"/></proof>
    <proof prover="6"><result status="valid" time="0.20" steps="33270"/></proof>
    </goal>
    <goal name="distr&#39;vc.12.3.2" expl="postcondition">
    <proof prover="2" memlimit="4000" obsolete="true"><result status="valid" time="8.32"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.11.1.0" expl="precondition">
    <proof prover="2" memlimit="4000" obsolete="true"><result status="valid" time="5.91"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.3.1" expl="postcondition">
    <proof prover="2" memlimit="4000" obsolete="true"><result status="valid" time="8.39"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.11.2" expl="precondition">
   <proof prover="6"><undone/></proof>
   </goal>
   <goal name="distr&#39;vc.11.0" expl="precondition">
   <transf name="split_vc" >
    <goal name="distr&#39;vc.11.0.0" expl="precondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.45" steps="30099"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.0.0" expl="postcondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.46" steps="31397"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.0.2" expl="postcondition">
    <proof prover="0" timelimit="1" memlimit="1000" obsolete="true"><result status="valid" time="0.36" steps="32115"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.0.3" expl="postcondition">
    <proof prover="2" timelimit="1" obsolete="true"><result status="valid" time="0.15"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.11.4" expl="precondition">
   <transf name="split_vc" >
    <goal name="distr&#39;vc.11.4.0" expl="precondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.14" steps="144864"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.9.0.0" expl="precondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.16" steps="169363"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.2.0" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.17" steps="180791"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="distr&#39;vc.12.2.1" expl="postcondition">
    <proof prover="3" obsolete="true"><result status="valid" time="0.16" steps="169363"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="distr&#39;vc.10.1" expl="variant decrease">
   <proof prover="6"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="distr&#39;vc.9" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.11" steps="24480"/></proof>
  </goal>
  <goal name="distr&#39;vc.10" expl="variant decrease" proved="true">
  <proof prover="3" timelimit="5"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.20" steps="33465"/></proof>
  </goal>
  <goal name="distr&#39;vc.11" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="24559"/></proof>
  </goal>
  <goal name="distr&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="2"><result status="valid" time="6.97"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="3086416"/></proof>
  <proof prover="6"><result status="timeout" time="1.00" steps="124286"/></proof>
  <proof prover="7"><result status="highfailure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="cnfc&#39;vc" expl="VC for cnfc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="cnfc&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.17" steps="31010"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.1" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="28019"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="4" obsolete="true"><result status="valid" time="0.20"/></proof>
  <proof prover="6"><result status="valid" time="0.16" steps="31118"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.3" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="28082"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.4" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.11" steps="28201"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.5" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.16" steps="30856"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.6" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="28019"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.7" expl="variant decrease" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.18" steps="31112"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.8" expl="precondition" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="28082"/></proof>
  </goal>
  <goal name="cnfc&#39;vc.9" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="cnfc&#39;vc.9.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="3.04"/></proof>
   <proof prover="3"><result status="timeout" time="1.00" steps="3033807"/></proof>
   <proof prover="6"><result status="timeout" time="1.00" steps="92043"/></proof>
   <proof prover="7"><result status="highfailure" time="0.00"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.9.1" expl="postcondition" proved="true">
   <proof prover="4" obsolete="true"><result status="valid" time="0.06"/></proof>
   <proof prover="6"><result status="valid" time="0.08" steps="26855"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.9.2" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="3.09"/></proof>
   <proof prover="3"><result status="timeout" time="1.00" steps="2817465"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="1.36"/></proof>
   <proof prover="6"><result status="timeout" time="1.00" steps="158599"/></proof>
   <proof prover="7"><result status="highfailure" time="0.00"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.9.3" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.92"/></proof>
   <proof prover="3"><result status="timeout" time="1.00" steps="2879473"/></proof>
   <proof prover="6"><result status="timeout" time="1.00" steps="146773"/></proof>
   <proof prover="7"><result status="highfailure" time="0.01"/></proof>
   </goal>
   <goal name="cnfc&#39;vc.2.1" expl="variant decrease">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="1.36"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
   <goal name="cnfc&#39;vc.2.3" expl="variant decrease">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="1.20"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="t&#39;vc" expl="VC for t" proved="true">
 <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.19" steps="31559"/></proof>
 </goal>
 <goal name="to_cnf_type_aux&#39;vc" expl="VC for to_cnf_type_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_cnf_type_aux&#39;vc.0" expl="unreachable point" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.16" steps="29351"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.20" steps="33474"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.2" expl="precondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="29021"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="to_cnf_type_aux&#39;vc.3.0" expl="variant decrease" proved="true">
   <proof prover="4" obsolete="true"><result status="valid" time="0.75"/></proof>
   <proof prover="6"><result status="valid" time="0.14" steps="30192"/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.3.1" expl="variant decrease" proved="true">
   <proof prover="4" obsolete="true"><result status="valid" time="1.12"/></proof>
   <proof prover="6"><result status="valid" time="0.17" steps="33465"/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.4.0" expl="precondition">
   <proof prover="4" obsolete="true"><result status="valid" time="0.83"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.6.2" expl="postcondition">
   <proof prover="4" obsolete="true"><result status="valid" time="0.78"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
   <goal name="to_cnf_type_aux&#39;vc.3.0" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="0.79"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="29059"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.5" expl="unreachable point" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="29000"/></proof>
  </goal>
  <goal name="to_cnf_type_aux&#39;vc.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="3.36"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="3212896"/></proof>
  <proof prover="6"><result status="timeout" time="1.00"/></proof>
  <proof prover="7"><result status="highfailure" time="0.01"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_cnf_type&#39;vc" expl="VC for to_cnf_type" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_cnf_type&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.18" steps="33313"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.1" expl="precondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.12" steps="29163"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="4" obsolete="true"><result status="valid" time="1.28"/></proof>
  <proof prover="6"><result status="valid" time="0.18" steps="33351"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.3" expl="precondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.13" steps="29201"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.4" expl="precondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="3.49"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="3272468"/></proof>
  <proof prover="6"><result status="timeout" time="1.00"/></proof>
  <proof prover="7"><result status="highfailure" time="0.00"/></proof>
  </goal>
  <goal name="to_cnf_type&#39;vc.5" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="to_cnf_type&#39;vc.5.0" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.99"/></proof>
   <proof prover="3"><result status="timeout" time="1.00" steps="3432363"/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="0.12"/></proof>
   <proof prover="6"><result status="timeout" time="1.00"/></proof>
   <proof prover="7"><result status="highfailure" time="0.00"/></proof>
   </goal>
   <goal name="to_cnf_type&#39;vc.5.1" expl="postcondition" proved="true">
   <proof prover="2"><result status="valid" time="2.91"/></proof>
   <proof prover="3"><result status="timeout" time="1.00" steps="3483787"/></proof>
   <proof prover="6"><result status="timeout" time="1.00"/></proof>
   <proof prover="7"><result status="highfailure" time="0.00"/></proof>
   </goal>
   <goal name="to_cnf_type&#39;vc.1.1" expl="precondition">
   <proof prover="2"><undone/></proof>
   <proof prover="4" obsolete="true"><result status="valid" time="1.43"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="to_formula_aux&#39;vc" expl="VC for to_formula_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_formula_aux&#39;vc.0" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.17" steps="33637"/></proof>
  </goal>
  <goal name="to_formula_aux&#39;vc.1" expl="variant decrease" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.19" steps="33609"/></proof>
  </goal>
  <goal name="to_formula_aux&#39;vc.2" expl="variant decrease" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.18" steps="33637"/></proof>
  </goal>
  <goal name="to_formula_aux&#39;vc.3" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="to_formula_aux&#39;vc.3.0" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="to_formula_aux&#39;vc.3.0.0" expl="variant decrease" proved="true">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><result status="valid" time="0.18" steps="31347"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.06"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.14"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.0.1.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.3" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.1.1.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.15"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.14"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.15"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.3.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_formula_aux&#39;vc.3.1" expl="variant decrease" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="to_formula_aux&#39;vc.3.1.0" expl="variant decrease" proved="true">
    <proof prover="4" obsolete="true"><result status="valid" time="0.07"/></proof>
    <proof prover="6"><result status="valid" time="0.22" steps="33529"/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.07"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.2" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.08"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.08"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.0.0.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.1.1" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_formula_aux&#39;vc.1.0" expl="variant decrease">
   <transf name="split_vc" >
    <goal name="to_formula_aux&#39;vc.1.0.0" expl="variant decrease">
    <proof prover="4" obsolete="true"><result status="valid" time="0.67"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.70"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.1" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.90"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.2" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.87"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.65"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.74"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.3" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.79"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.0.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.73"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
   <goal name="to_formula_aux&#39;vc.4.2" expl="postcondition">
   <transf name="split_vc" >
    <goal name="to_formula_aux&#39;vc.4.2.0" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.1" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.2" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.09"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.3" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.4" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.5" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.10"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.6" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.11"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.7" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.18"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
    <goal name="to_formula_aux&#39;vc.4.2.8" expl="postcondition">
    <proof prover="4" obsolete="true"><result status="valid" time="0.12"/></proof>
    <proof prover="6"><undone/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
  <goal name="to_formula_aux&#39;vc.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="3.75"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="3828856"/></proof>
  <proof prover="6"><result status="timeout" time="1.00"/></proof>
  <proof prover="7"><result status="highfailure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="to_formula&#39;vc" expl="VC for to_formula" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="to_formula&#39;vc.0" expl="variant decrease" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="to_formula&#39;vc.0.0" expl="variant decrease" proved="true">
   <proof prover="4" obsolete="true"><result status="valid" time="2.35"/></proof>
   <proof prover="6"><result status="valid" time="0.19" steps="33279"/></proof>
   </goal>
   <goal name="to_formula&#39;vc.0.1" expl="variant decrease" proved="true">
   <proof prover="4" obsolete="true"><result status="valid" time="2.04"/></proof>
   <proof prover="6"><result status="valid" time="0.26" steps="38234"/></proof>
   </goal>
   <goal name="to_formula&#39;vc.1.0" expl="precondition">
   <proof prover="4" obsolete="true"><result status="valid" time="2.12"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
   <goal name="to_formula&#39;vc.0.0" expl="variant decrease">
   <proof prover="4" obsolete="true"><result status="valid" time="2.24"/></proof>
   <proof prover="6"><undone/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="to_formula&#39;vc.1" expl="precondition" proved="true">
  <proof prover="3"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.17" steps="36345"/></proof>
  </goal>
  <goal name="to_formula&#39;vc.2" expl="unreachable point" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="6"><result status="valid" time="0.14" steps="31395"/></proof>
  </goal>
  <goal name="to_formula&#39;vc.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="failure" time="0.00"/></proof>
  <proof prover="2"><result status="valid" time="3.84"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="3857868"/></proof>
  <proof prover="6"><result status="timeout" time="1.00"/></proof>
  <proof prover="7"><result status="highfailure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="t_equiv" proved="true">
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.17" steps="33008"/></proof>
 </goal>
 <goal name="equiv_to_cnf" proved="true">
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.17" steps="33028"/></proof>
 </goal>
 <goal name="equiv_to_cnf2" proved="true">
 <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.19" steps="36454"/></proof>
 </goal>
 <goal name="refl0" proved="true">
 <proof prover="3"><result status="valid" time="0.16" steps="524741"/></proof>
 <proof prover="6"><result status="timeout" time="1.00"/></proof>
 <proof prover="7"><result status="highfailure" time="0.01"/></proof>
 </goal>
 <goal name="refl1" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.21" steps="37482"/></proof>
 </goal>
 <goal name="refl2" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="1200" memlimit="8192"><result status="failure" time="0.00"/></proof>
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.22" steps="33234"/></proof>
 </goal>
 <goal name="absurd_cnf" proved="true">
 <proof prover="2"><result status="valid" time="6.43"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="3596014"/></proof>
 <proof prover="4" obsolete="true"><result status="valid" time="1.81"/></proof>
 <proof prover="6"><result status="timeout" time="1.00"/></proof>
 <proof prover="7"><result status="highfailure" time="0.00"/></proof>
 </goal>
</theory>
</file>
<file format="whyml">
<path name=".."/><path name="formula2.mlw"/>
<theory name="PropositionalFormula">
 <goal name="comm_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="15897"/></proof>
 </goal>
 <goal name="comm_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="15937"/></proof>
 </goal>
 <goal name="dist_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.11" steps="19864"/></proof>
 </goal>
 <goal name="dist_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.12" steps="21162"/></proof>
 </goal>
 <goal name="ident_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="16900"/></proof>
 </goal>
 <goal name="ident_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="17059"/></proof>
 </goal>
 <goal name="uniq_compl" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="16212"/></proof>
 </goal>
 <goal name="compl_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="17415"/></proof>
 </goal>
 <goal name="compl_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="17535"/></proof>
 </goal>
 <goal name="idem_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="16322"/></proof>
 </goal>
 <goal name="idem_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="16349"/></proof>
 </goal>
 <goal name="bound_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="16530"/></proof>
 </goal>
 <goal name="bound_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="16560"/></proof>
 </goal>
 <goal name="absorp_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.10" steps="19799"/></proof>
 </goal>
 <goal name="absorp_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.11" steps="20681"/></proof>
 </goal>
 <goal name="assoc_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.13" steps="23984"/></proof>
 </goal>
 <goal name="assoc_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.13" steps="23897"/></proof>
 </goal>
 <goal name="demorgan_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.13" steps="23977"/></proof>
 </goal>
 <goal name="demorgan_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.14" steps="26453"/></proof>
 </goal>
 <goal name="negtop" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.08" steps="17663"/></proof>
 </goal>
 <goal name="negbot" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="18176"/></proof>
 </goal>
 <goal name="double_neg" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="18280"/></proof>
 </goal>
 <goal name="dist_ord" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.06" steps="15354"/></proof>
 </goal>
 <goal name="disj_and" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.12" steps="25279"/></proof>
 </goal>
 <goal name="disj_or" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="18723"/></proof>
 </goal>
 <goal name="modus_ponens" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.14" steps="27767"/></proof>
 </goal>
 <goal name="modus_tollens" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.37" steps="40206"/></proof>
 </goal>
 <goal name="implic" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.11" steps="21537"/></proof>
 </goal>
 <goal name="absur" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.31" steps="44770"/></proof>
 </goal>
 <goal name="disj_syl" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.43" steps="41844"/></proof>
 </goal>
 <goal name="impl_chain" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="30.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1756916"/></proof>
 <proof prover="6" timelimit="5"><result status="valid" time="1.64" steps="77117"/></proof>
 <proof prover="7"><result status="highfailure" time="0.00"/></proof>
 </goal>
 <goal name="impl_comb" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="30.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1797036"/></proof>
 <proof prover="6" timelimit="5"><result status="valid" time="2.28" steps="82203"/></proof>
 <proof prover="7"><result status="highfailure" time="0.00"/></proof>
 </goal>
 <goal name="currying" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.33" steps="43409"/></proof>
 </goal>
 <goal name="contrapos" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.13" steps="23654"/></proof>
 </goal>
 <goal name="pierce" proved="true">
 <proof prover="0"><result status="failure" time="0.00"/></proof>
 <proof prover="2"><result status="timeout" time="30.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="1829706"/></proof>
 <proof prover="6" timelimit="5"><result status="valid" time="1.91" steps="74018"/></proof>
 <proof prover="7"><result status="highfailure" time="0.00"/></proof>
 </goal>
 <goal name="eval_nil" proved="true">
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.09" steps="19804"/></proof>
 </goal>
 <goal name="eval_single_comm" proved="true">
 <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="536967"/></proof>
 <proof prover="6"><result status="valid" time="0.11" steps="22190"/></proof>
 </goal>
 <goal name="asserting" proved="true">
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.13" steps="24530"/></proof>
 </goal>
 <goal name="asserting_concat" proved="true">
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.10" steps="21231"/></proof>
 </goal>
 <goal name="eval_single" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eval_single.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="x">
   <goal name="eval_single.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="eval_single.0.0.0" proved="true">
    <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
    <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
    <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1191843"/></proof>
    <proof prover="6"><result status="valid" time="0.09" steps="20359"/></proof>
    </goal>
    <goal name="eval_single.0.0.1" proved="true">
    <proof prover="3"><result status="failure" time="0.00"/></proof>
    <proof prover="6"><result status="valid" time="0.22" steps="35679"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="eval_single_comm_2" proved="true">
 <proof prover="2" timelimit="1"><result status="failure" time="0.00"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="543683"/></proof>
 <proof prover="6"><result status="valid" time="0.14" steps="25066"/></proof>
 </goal>
 <goal name="eval_double" proved="true">
 <proof prover="0" timelimit="1" memlimit="1000"><result status="failure" time="0.00"/></proof>
 <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="547085"/></proof>
 <proof prover="6"><result status="valid" time="0.47" steps="64365"/></proof>
 </goal>
 <goal name="eval_n" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="eval_n.0" proved="true">
  <transf name="unfold" proved="true" arg1="eval_cnf_clause">
   <goal name="eval_n.0.0" proved="true">
   <transf name="induction_arg_ty_lex" proved="true" arg1="x">
    <goal name="eval_n.0.0.0" proved="true">
    <transf name="split_vc" proved="true" >
     <goal name="eval_n.0.0.0.0" proved="true">
     <proof prover="6"><result status="valid" time="0.08" steps="20734"/></proof>
     </goal>
     <goal name="eval_n.0.0.0.1" proved="true">
     <proof prover="6"><result status="valid" time="0.16" steps="25983"/></proof>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="comm_cnf_clause" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="comm_cnf_clause.0" proved="true">
  <transf name="induction_arg_ty_lex" proved="true" arg1="y">
   <goal name="comm_cnf_clause.0.0" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="comm_cnf_clause.0.0.0" proved="true">
    <proof prover="3"><result status="failure" time="0.00"/></proof>
    <proof prover="6"><result status="valid" time="0.07" steps="19478"/></proof>
    </goal>
    <goal name="comm_cnf_clause.0.0.1" proved="true">
    <transf name="assert" arg1="(equiv_cnf_clause (Cons x1 x) (x ++ (Cons x1 Nil)))">
     <goal name="comm_cnf_clause.0.0.1.0" expl="asserted formula" proved="true">
     <proof prover="3"><result status="failure" time="0.00"/></proof>
     <proof prover="6"><result status="valid" time="0.07" steps="19468"/></proof>
     </goal>
     <goal name="comm_cnf_clause.0.0.1.1">
     <transf name="replace" arg1="(Cons x1 x)" arg2="(x ++ (Cons x1 Nil))">
      <goal name="comm_cnf_clause.0.0.1.1.0" proved="true">
      <proof prover="1" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="195727"/></proof>
      <proof prover="2" memlimit="4000" obsolete="true"><result status="failure" time="0.00"/></proof>
      <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="22555015"/></proof>
      <proof prover="5" timelimit="5" memlimit="2000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
      <proof prover="6"><result status="valid" time="0.13" steps="25272"/></proof>
      </goal>
      <goal name="comm_cnf_clause.0.0.1.1.1" expl="equality hypothesis">
      <proof prover="3"><result status="timeout" time="1.00" steps="1733097"/></proof>
      <proof prover="6"><result status="timeout" time="1.00" steps="113459"/></proof>
      <proof prover="7"><result status="highfailure" time="0.00"/></proof>
      </goal>
     </transf>
     </goal>
    </transf>
    <transf name="replace" arg1="(Cons x1 x)" arg2="(x ++ (Cons x1 Nil))">
     <goal name="comm_cnf_clause.0.0.1.0" proved="true">
     <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="1017202"/></proof>
     <proof prover="2" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
     <proof prover="3" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="25431262"/></proof>
     <proof prover="5" obsolete="true"><result status="highfailure" time="0.01"/></proof>
     <proof prover="6"><result status="valid" time="0.14" steps="24872"/></proof>
     </goal>
     <goal name="comm_cnf_clause.0.0.1.1" expl="equality hypothesis">
     <proof prover="3"><result status="timeout" time="1.00" steps="1851323"/></proof>
     <proof prover="6"><result status="timeout" time="1.00" steps="110636"/></proof>
     <proof prover="7"><result status="highfailure" time="0.00"/></proof>
     </goal>
    </transf>
    <transf name="unfold" proved="true" arg1="equiv_cnf_clause">
     <goal name="comm_cnf_clause.0.0.1.0" proved="true">
     <transf name="split_vc" proved="true" >
      <goal name="comm_cnf_clause.0.0.1.0.0" proved="true">
      <transf name="replace" proved="true" arg1="(eval_cnf_clause (x2 ++ Cons x1 x) v)" arg2="((eval_cnf_clause x2 v) \*/ (eval_cnf_clause (Cons x1 x) v))">
       <goal name="comm_cnf_clause.0.0.1.0.0.0" proved="true">
       <proof prover="1" obsolete="true"><result status="timeout" time="1.00" steps="68907"/></proof>
       <proof prover="2" timelimit="5" memlimit="2000" obsolete="true"><result status="failure" time="0.00"/></proof>
       <proof prover="3" timelimit="5" memlimit="2000" obsolete="true"><result status="timeout" time="5.00" steps="597045"/></proof>
       <proof prover="5" timelimit="1" memlimit="1000" obsolete="true"><result status="highfailure" time="0.01"/></proof>
       <proof prover="6"><result status="valid" time="0.08" steps="20366"/></proof>
       </goal>
       <goal name="comm_cnf_clause.0.0.1.0.0.1" expl="equality hypothesis" proved="true">
       <proof prover="6"><result status="valid" time="0.08" steps="20033"/></proof>
       </goal>
      </transf>
      </goal>
     </transf>
     </goal>
    </transf>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="comm_cnf">
 <proof prover="2" timelimit="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="3"><result status="timeout" time="1.00" steps="2255028"/></proof>
 <proof prover="6"><result status="timeout" time="1.00" steps="99781"/></proof>
 <proof prover="7"><result status="highfailure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="comm_cnf.0">
  <proof prover="2" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="3" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="9381617"/></proof>
  <proof prover="6" timelimit="5" memlimit="2000"><result status="timeout" time="5.00" steps="374457"/></proof>
  <proof prover="7" timelimit="5" memlimit="2000"><result status="highfailure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="assoc_cnf_clause" proved="true">
 <proof prover="3"><result status="failure" time="0.00"/></proof>
 <proof prover="6"><result status="valid" time="0.11" steps="21054"/></proof>
 </goal>
 <goal name="assoc_cnf">
 <proof prover="1" obsolete="true"><result status="timeout" time="1.00" steps="95872"/></proof>
 <proof prover="2" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
 <proof prover="3" obsolete="true"><result status="timeout" time="1.00" steps="1183441"/></proof>
 <proof prover="5" timelimit="1" memlimit="1000" obsolete="true"><result status="highfailure" time="0.00"/></proof>
 <transf name="split_vc" >
  <goal name="assoc_cnf.0">
  <proof prover="1" timelimit="30" memlimit="4000" obsolete="true"><result status="timeout" time="30.00" steps="562635"/></proof>
  <proof prover="2" memlimit="4000" obsolete="true"><result status="timeout" time="30.00"/></proof>
  <proof prover="3"><result status="timeout" time="1.00" steps="1199836"/></proof>
  <proof prover="5" obsolete="true"><result status="highfailure" time="0.01"/></proof>
  <proof prover="6"><result status="timeout" time="1.00" steps="102300"/></proof>
  <proof prover="7"><result status="highfailure" time="0.00"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
<file format="whyml" proved="true">
<path name=".."/><path name="boolean_algebra.mlw"/>
<theory name="BooleanAlgebra" proved="true">
 <goal name="lattice_ring" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.10" steps="6632"/></proof>
 <proof prover="3" timelimit="5"><result status="highfailure" time="3.47" steps="2331047"/></proof>
 </goal>
 <goal name="comm_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1711"/></proof>
 </goal>
 <goal name="comm_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1728"/></proof>
 </goal>
 <goal name="dist_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1757"/></proof>
 </goal>
 <goal name="dist_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1786"/></proof>
 </goal>
 <goal name="ident_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1799"/></proof>
 </goal>
 <goal name="ident_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1812"/></proof>
 </goal>
 <goal name="uniq_compl" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="16894"/></proof>
 </goal>
 <goal name="compl_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.10" steps="55576"/></proof>
 </goal>
 <goal name="compl_or" proved="true">
 <proof prover="2" timelimit="1200" memlimit="8192"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="idem_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1888"/></proof>
 </goal>
 <goal name="idem_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="1901"/></proof>
 </goal>
 <goal name="boundbot" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1910"/></proof>
 </goal>
 <goal name="boundtop" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1919"/></proof>
 </goal>
 <goal name="bound_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1932"/></proof>
 </goal>
 <goal name="bound_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1945"/></proof>
 </goal>
 <goal name="absorp_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1962"/></proof>
 </goal>
 <goal name="absorp_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="1979"/></proof>
 </goal>
 <goal name="assoc_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="2004"/></proof>
 </goal>
 <goal name="assoc_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="2029"/></proof>
 </goal>
 <goal name="demorgan_and" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="3.02" steps="278114"/></proof>
 <proof prover="3" timelimit="5"><result status="highfailure" time="3.60" steps="727804"/></proof>
 </goal>
 <goal name="demorgan_or" proved="true">
 <proof prover="2" timelimit="1200" memlimit="8192"><result status="valid" time="1.38"/></proof>
 </goal>
 <goal name="negtop" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="18872"/></proof>
 </goal>
 <goal name="negbot" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="22153"/></proof>
 </goal>
 <goal name="double_neg" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.26" steps="152268"/></proof>
 </goal>
 <goal name="dist_ord" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="22803"/></proof>
 </goal>
 <goal name="disj_and" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="22681"/></proof>
 </goal>
 <goal name="disj_or" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="26668"/></proof>
 </goal>
 <goal name="modus_ponens" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.11" steps="58632"/></proof>
 </goal>
 <goal name="modus_tollens" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="32049"/></proof>
 </goal>
 <goal name="implic" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.04" steps="2330"/></proof>
 </goal>
 <goal name="absur" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.15" steps="112987"/></proof>
 </goal>
 <goal name="disj_syl" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.09" steps="55074"/></proof>
 </goal>
 <goal name="impl_chain" proved="true">
 <proof prover="1" timelimit="5"><result status="valid" time="0.32" steps="32383"/></proof>
 <proof prover="3" timelimit="5"><result status="highfailure" time="4.28" steps="784944"/></proof>
 </goal>
 <goal name="impl_comb" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.45" steps="164818"/></proof>
 </goal>
 <goal name="currying" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="33340"/></proof>
 </goal>
 <goal name="contrapos" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.07" steps="33051"/></proof>
 </goal>
 <goal name="g" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.06" steps="15687"/></proof>
 </goal>
</theory>
<theory name="SwitchingAlgebra" proved="true">
 <goal name="ifnottop_thenbot" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.18" steps="189424"/></proof>
 </goal>
 <goal name="ifnotbot_thentop" proved="true">
 <proof prover="3" timelimit="5"><result status="valid" time="0.05" steps="12320"/></proof>
 </goal>
</theory>
</file>
</why3session>
